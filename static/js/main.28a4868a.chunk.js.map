{"version":3,"sources":["components/logo/index.jsx","responsive/index.jsx","components/navbar/menuStyle.jsx","components/navbar/navItems.jsx","colorScheme/index.jsx","components/navbar/index.jsx","components/userData/barGraph.jsx","components/userData/lineChart.jsx","components/userData/pi.jsx","components/userData/table.jsx","components/userData/userStatusTable.jsx","gif/waiting.gif","containers/UserPage/index.jsx","gif/Untitled.gif","components/comparitorData/barGraph.jsx","containers/ComparitorPage/index.jsx","gif/LD1.gif","containers/HomePage/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["LogoContainer","styled","div","ImageContainer","LogoText","Logo","src","className","SCREENS","sm","md","lg","xl","styles","bmBurgerButton","position","width","height","marginRight","marginTop","marginBottom","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","bmMorphShape","fill","bmItemList","color","bmItem","display","bmOverlay","List","ul","Items","li","NavList","useMediaQuery","maxWidth","right","menuStyle","href","current","navbar","body","component","font","border","textBox","pie","graph","NavbarContainer","Colors","Navbar","Data","props","data","labels","xAxis","responsive","datasets","label","yAxis","backgroundColor","borderColor","options","layout","left","bottom","top","tooltips","callbacks","toolTipItem","value","scales","xAxes","gridLines","scaleLabel","labelString","fontColor","yAxes","ticks","beginAtZero","LineChart","slice","length","UserTable","console","log","newRating","name","totalContest","maxRating","minRating","maxUp","maxDown","tried","solved","UserData","Graph","Table","Pi","HomePage","useState","setRank","setOldRating","setNewRating","contestName","setContestName","setMaxRating","setMinRating","setMaxUp","setMaxDown","language","setLanguage","verdict","setVerdict","tags","setTags","problemRating","setProblemRating","problemLevel","setProblemLevel","attempt","setAttempt","solve","setSolve","freqLanguage","setFreqLanguage","freqVerdict","setFreqVerdict","freqTags","setFreqTags","freqProblemRating","setFreqProblemRating","freqProblemLevel","setFreqProblemLevel","setFreqAttempt","setFreqsolve","loading","setLoading","fillInMap","userMap","mapToArray","userArr","userArrFreq","val","push","useEffect","axios","userName","then","arrRank","arrContestName","arrNewRating","arrOldRating","result","map","key","mx","mn","i","Math","max","min","analyzeUserRating","reduce","a","b","userLanguage","Map","userVerdict","userTags","userProblemRating","userProblemLevel","userAttemptedProblem","userSolvedProblem","userUnsolvedProblem","problem","programmingLanguage","rating","index","tag","langName","langFreq","verdName","verdFreq","tagsFreq","problemRatingFreq","problemLevelFreq","triedFreq","solvedFreq","analyzeUserStatus","WaitGIF","yAxis1","yAxis2","stacked","MainPage","Comparitor","rank","oldRating","freqAttempt","freqSolve","user1","setUser1","user2","setUser2","handle1","obj","handle2","UnderConstructionGIF","Content","setUserName","platformName","setPlatformName","url","setUrl","setHandle1","setHandle2","renderUserPage","setRenderUserPage","renderComparingPage","setRenderComparingPage","onClick","UserPage","GIF","type","placeholder","onChange","event","target","MainContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28a4868a.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nconst LogoContainer = styled.div`\n  ${tw`\n    flex\n    flex-row\n    space-x-2\n  `};\n`;\n\nconst ImageContainer = styled.div`\n  ${tw`\n    w-24\n  `};\n`;\n\nconst LogoText = styled.div`\n  ${tw`\n\n    flex\n    px-2\n    justify-center\n    items-center\n  `};\n`;\n\nconst Logo = () => {\n  return (\n    <LogoContainer>\n      <ImageContainer>\n        <img\n          src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fanimevn247.com%2Fwp-content%2Fuploads%2F2021%2F03%2Fthumbnail-768x403.png&f=1&nofb=1\"\n          className=\"rounded-xl\"\n        />\n      </ImageContainer>\n      <LogoText>Stalker</LogoText>\n    </LogoContainer>\n  );\n};\n\nexport default Logo;\n","const SCREENS = {\n  sm: \"640px\",\n  md: \"768px\",\n  lg: \"1024px\",\n  xl: \"1280px\",\n  \"2xl\": \"1536px\",\n};\n\nexport default SCREENS;\n","let styles = {\n  bmBurgerButton: {\n    position: \"relative\",\n\n    width: \"26px\",\n    height: \"20px\",\n    marginRight: \"9px\",\n    marginTop: \"9px\",\n    marginBottom: \"9px\",\n    // right: \"30px\",\n    // top: \"36px\",\n  },\n  bmBurgerBars: {\n    background: \"#373a47\",\n  },\n  bmBurgerBarsHover: {\n    background: \"#a90000\",\n  },\n  bmCrossButton: {\n    position: \"fixed\",\n    height: \"24px\",\n    width: \"24px\",\n  },\n  bmCross: {\n    background: \"#bdc3c7\",\n  },\n  bmMenuWrap: {\n    position: \"fixed\",\n    height: \"100%\",\n  },\n  bmMenu: {\n    background: \"#373a47\",\n    padding: \"1.5em 0.5em 0\",\n    fontSize: \"1.15em\",\n    marginTop: \"-4rem\",\n  },\n  bmMorphShape: {\n    fill: \"#373a47\",\n  },\n  bmItemList: {\n    color: \"#b8b7ad\",\n    padding: \"0.8em\",\n  },\n  bmItem: {\n    display: \"inline-block\",\n  },\n  bmOverlay: {\n    background: \"rgba(0, 0, 0, 0.3)\",\n  },\n};\n\nexport default styles;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport tw from \"twin.macro\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport SCREENS from \"../../responsive/index.jsx\";\nimport menuStyle from \"./menuStyle.jsx\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst List = styled.ul`\n  ${tw`\n    flex \n    list-none\n    divide-x\n    divide-gray-800\n    `};\n`;\n\nconst Items = styled.li`\n  ${tw`\n    flex\n    px-2\n    justify-center\n    items-center\n    `};\n`;\nconst NavList = () => {\n  const isMobile = useMediaQuery({ maxWidth: SCREENS.sm });\n  if (isMobile)\n    return (\n      <Menu right styles={menuStyle} width={\"50%\"}>\n        <List>\n          <Items>\n            <a href=\"#\"> Home</a>\n          </Items>\n          <Items>\n            <a href=\"#\"> Compare </a>\n          </Items>\n          <Items>\n            <a href=\"#\"> Virtual Rating</a>\n          </Items>\n          <Items>\n            <a href=\"#\"> Kuch kehna hai</a>\n          </Items>\n        </List>\n      </Menu>\n    );\n  else\n    return (\n      <>\n        <List>\n          <Items>\n            <a href=\"#\"> Home</a>\n          </Items>\n          <Items>\n            <a href=\"#\"> Compare </a>\n          </Items>\n          <Items>\n            <a href=\"#\"> Virtual Rating</a>\n          </Items>\n          <Items>\n            <a href=\"#\"> Kuch kehna hai </a>\n          </Items>\n        </List>\n      </>\n    );\n};\n\nexport default NavList;\n","const current = {\n  background: \"#FAE3D9\",\n  navbar: \"#FFB6B9\",\n  body: \"#BBDED6\",\n  component: \"#61C0BF\",\n  font: \"#FFFFFF\",\n  border: \"#FFFFFF\",\n  textBox: \"#FAE3D9\",\n  pie: [\n    \"#a94064\",\n    \"#f88379\",\n    \"#D4AF37\",\n    \"#eedc82\",\n    \"#922724\",\n    \"#6699cc\",\n    \"#808000\",\n    \"#228b22\",\n    \"#77dd77\",\n    \"#008080\",\n    \"#89CFF0\",\n    \"#4169e1\",\n    \"#800020\",\n    \"#b38b6d\",\n    \"#daa520\",\n    \"#e97451\",\n    \"#8a3324\",\n    \"#c2b280\",\n    \"#551a8b\",\n    \"#702963\",\n    \"#563c5c\",\n    \"#4B0082\",\n    \"#9966cc\",\n  ],\n  graph: \"#9966cc\",\n};\n\nexport default current;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport tw from \"twin.macro\";\nimport Logo from \"../logo/index.jsx\";\nimport NavList from \"./navItems.jsx\";\nimport Colors from \"../../colorScheme/index.jsx\";\n\nconst NavbarContainer = styled.div`\n  background-color: ${Colors.navbar};\n  ${tw`\n    flex\n    px-2\n    mx-2\n    py-2\n\n    relative\n    top-2\n\n    mx-auto\n    max-w-7xl\n    justify-between\n    rounded-3xl\n    shadow-2xl\n    `};\n`;\n\nconst Navbar = () => {\n  return (\n    <NavbarContainer>\n      <Logo />\n      <NavList />\n    </NavbarContainer>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Colors from \"../../colorScheme/index.jsx\";\n\nconst Data = (props) => {\n  return (\n    <>\n      <Bar\n        data={{\n          // labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n          labels: props.xAxis,\n          responsive: false,\n\n          datasets: [\n            {\n              label: \"No. of Problems\",\n              // data: [100, 200, 300, 400, 500, 600],\n              data: props.yAxis,\n              backgroundColor: Colors.graph,\n              // barThickness: 40,\n              // borderWidth: 6,\n              borderColor: \"black\",\n            },\n            // {\n            //   label: \"Store 2\",\n            //   data: [321, 212, 344, 332, 223, 566],\n            //   backgroundColor: \"green\",\n            //   barThickness: 12,\n            // },\n            // {\n            //   label: \"Store 3\",\n            //   data: [123, 200, 232, 400, 232, 23],\n            //   backgroundColor: \"orange\",\n            //   barThickness: 12,\n            // },\n            // {\n            //   label: \"Store 4\",\n            //   data: [100, 500, 300, 343, 43, 343],\n            //   backgroundColor: \"purple\",\n            //   barThickness: 12,\n            // },\n          ],\n        }}\n        options={{\n          layout: {\n            padding: {\n              left: 0,\n              right: 0,\n              bottom: 40,\n              top: 40,\n            },\n          },\n          tooltips: {\n            callbacks: {\n              label: function (toolTipItem) {\n                return \"$\" + toolTipItem.value;\n              },\n            },\n          },\n          scales: {\n            xAxes: [\n              {\n                gridLines: {\n                  color: \"cyan\",\n                },\n                scaleLabel: {\n                  labelString: \"x-axis\",\n                  display: true,\n                  fontColor: \"blue\",\n                  fontSize: \"8rem\",\n                },\n              },\n            ],\n            yAxes: [\n              {\n                gridLines: {\n                  color: \"cyan\",\n                },\n\n                scaleLabel: {\n                  labelString: \"y-axis\",\n                  display: true,\n                  fontColor: \"blue\",\n                  fontSize: \"8rem\",\n                },\n                ticks: {\n                  beginAtZero: true,\n                  fontColor: \"red\",\n                  fontSize: \"6rem\",\n                },\n              },\n            ],\n          },\n        }}\n      ></Bar>\n    </>\n  );\n};\n\nexport default Data;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst LineChart = (props) => (\n  <>\n    <Line\n      data={{\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            bottom: 40,\n            top: 40,\n          },\n        },\n        labels: props.xAxis,\n        datasets: [\n          {\n            label: \"Rating\",\n            data: props.yAxis,\n            fill: false,\n            backgroundColor: \"rgb(255, 99, 132)\",\n            borderColor: \"rgba(255, 99, 132, 0.2)\",\n          },\n        ],\n      }}\n      options={{\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n              },\n            },\n          ],\n        },\n      }}\n    />\n  </>\n);\n\nexport default LineChart;\n","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport Colors from \"../../colorScheme/index.jsx\";\n\nconst Data = (props) => {\n  return (\n    <Pie\n      data={{\n        // labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n        labels: props.xAxis,\n        datasets: [\n          {\n            data: props.yAxis,\n            backgroundColor: Colors.pie.slice(0, props.xAxis.length + 1),\n            borderColor: \"black\",\n            // backgroundColor: [\n            //   \"red\",\n            //   \"green\",\n            //   \"orange\",\n            //   \"purple\",\n            //   \"cyan\",\n            //   \"blue\",\n            //   \"white\",\n            //   \"gray\",\n            //   \"black\",\n            // ],\n          },\n          // {\n          //   data: [20, 44, 300, 33, 500, 600],\n          //   backgroundColor: [\n          //     \"red\",\n          //     \"green\",\n          //     \"orange\",\n          //     \"purple\",\n          //     \"cyan\",\n          //     \"blue\",\n          //   ],\n          // },\n          // {\n          //   data: [22, 200, 444, 400, 500, 30],\n          //   backgroundColor: [\n          //     \"red\",\n          //     \"green\",\n          //     \"orange\",\n          //     \"purple\",\n          //     \"cyan\",\n          //     \"blue\",\n          //   ],\n          // },\n        ],\n      }}\n    ></Pie>\n  );\n};\n\nexport default Data;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nconst UserTable = (props) => {\n  console.log(props.newRating);\n  return (\n    <table className=\"table-auto\">\n      <thead className=\"\">\n        <tr className=\"bg-gray-400\">\n          <th className=\"p-2 \">Contests of </th>\n          <th className=\"p-2\">{props.name}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr className=\"border-b-2 border-t-2 border-gray-600\">\n          <td className=\"p-2\">Number of Contests</td>\n          <td className=\"p-2\">{props.totalContest}</td>\n        </tr>\n        <tr className=\"border-b-2 border-gray-600\">\n          <td className=\"p-2\">Best Rank</td>\n          <td className=\"p-2\">{props.maxRating}</td>\n        </tr>\n        <tr className=\"border-b-2 border-gray-600\">\n          <td className=\"p-2\">Worst Rank</td>\n          <td className=\"p-2\">{props.minRating}</td>\n        </tr>\n        <tr className=\"border-b-2 border-gray-600\">\n          <td className=\"p-2\">Max Up</td>\n          <td className=\"p-2\">{props.maxUp}</td>\n        </tr>\n        <tr className=\"border-b-2 border-gray-600\">\n          <td className=\"p-2\">Max Down</td>\n          <td className=\"p-2\">{props.maxDown}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default UserTable;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nconst UserTable = (props) => {\n  console.log(props.newRating);\n  return (\n    <table className=\"table-auto\">\n      <thead className=\"\">\n        <tr className=\"bg-gray-400\">\n          <th className=\"p-2 \">Some stats of </th>\n          <th className=\"p-2\">{props.name}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr className=\"border-b-2 border-t-2 border-gray-600\">\n          <td className=\"p-2\">Tried </td>\n          <td className=\"p-2\">{props.tried}</td>\n        </tr>\n        <tr className=\"border-b-2 border-gray-600\">\n          <td className=\"p-2\">Solved </td>\n          <td className=\"p-2\">{props.solved}</td>\n        </tr>\n        <tr className=\"border-b-2 border-gray-600\">\n          <td className=\"p-2\">Worst Rank</td>\n          <td className=\"p-2\">{props.minRating}</td>\n        </tr>\n        <tr className=\"border-b-2 border-gray-600\">\n          <td className=\"p-2\">Max Up</td>\n          <td className=\"p-2\">{props.maxUp}</td>\n        </tr>\n        <tr className=\"border-b-2 border-gray-600\">\n          <td className=\"p-2\">Max Down</td>\n          <td className=\"p-2\">{props.maxDown}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default UserTable;\n","export default __webpack_public_path__ + \"static/media/waiting.a7670ed8.gif\";","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport tw from \"twin.macro\";\nimport Chart from \"../../components/userData/barGraph.jsx\";\nimport LineChart from \"../../components/userData/lineChart.jsx\";\nimport PiChart from \"../../components/userData/pi.jsx\";\nimport UserTable from \"../../components/userData/table.jsx\";\nimport UserStatusTable from \"../../components/userData/userStatusTable.jsx\";\nimport axios from \"axios\";\nimport Colors from \"../../colorScheme/index.jsx\";\nimport WaitGIF from \"../../gif/waiting.gif\";\n\nconst UserData = styled.div`\n  ${tw`\n    flex\n    my-4\n    py-4\n    space-x-4\n    flex-nowrap\n    flex-col\n    justify-center\n    items-center\n    bg-gray-400\n    container\n    mx-auto\n    rounded-3xl\n  `};\n  background-color: ${Colors.body};\n`;\n\nconst Graph = styled.div`\n  ${tw`\n  h-full \n  w-10/12\n  `}\n`;\n\nconst Table = styled.div`\n  ${tw`\npy-8\nflex\njustify-center\n`};\n`;\nconst Pi = styled.div`\n  ${tw`\n  w-2/5\n  h-2/5\n\n  `}\n`;\n\nconst Content = styled.div`\n  ${tw`\n    w-screen\n    h-2/5\n    flex\n    justify-center\n    items-center\n    `};\n`;\n\nconst HomePage = (props) => {\n  const [rank, setRank] = useState([]);\n  const [oldRating, setOldRating] = useState([]);\n  const [newRating, setNewRating] = useState([]);\n  const [contestName, setContestName] = useState([]);\n  const [maxRating, setMaxRating] = useState(0);\n  const [minRating, setMinRating] = useState(0);\n  const [maxUp, setMaxUp] = useState();\n  const [maxDown, setMaxDown] = useState();\n\n  // user Status\n  const [language, setLanguage] = useState([]);\n  const [verdict, setVerdict] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [problemRating, setProblemRating] = useState([]);\n  const [problemLevel, setProblemLevel] = useState([]);\n  const [attempt, setAttempt] = useState([]);\n  const [solve, setSolve] = useState([]);\n  const [unsolve, setUnsolve] = useState([]);\n\n  const [freqLanguage, setFreqLanguage] = useState([]);\n  const [freqVerdict, setFreqVerdict] = useState([]);\n  const [freqTags, setFreqTags] = useState([]);\n  const [freqProblemRating, setFreqProblemRating] = useState([]);\n  const [freqProblemLevel, setFreqProblemLevel] = useState([]);\n  const [freqAttempt, setFreqAttempt] = useState([]);\n  const [freqSolve, setFreqsolve] = useState([]);\n  const [freqUnsolve, setFreqUnsolve] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  const fetchUserRating = () => {\n    const data = axios(\n      `https://codeforces.com/api/user.rating?handle=${props.userName}`\n    );\n    return data;\n  };\n  const fetchUserStatus = () => {\n    const data = axios(\n      `https://codeforces.com/api/user.status?handle=${props.userName}`\n    );\n    return data;\n  };\n\n  const fillInMap = (userMap, value) => {\n    userMap[value] ? (userMap[value] += 1) : (userMap[value] = 1);\n  };\n\n  const mapToArray = (userMap, userArr, userArrFreq) => {\n    for (let val in userMap) {\n      userArr.push(val);\n      userArrFreq.push(userMap[val]);\n    }\n  };\n\n  const analyzeUserStatus = (data) => {\n    const userLanguage = new Map();\n    const userVerdict = new Map();\n    const userTags = new Map();\n    const userProblemRating = new Map();\n    const userProblemLevel = new Map();\n    const userAttemptedProblem = new Map();\n    const userSolvedProblem = new Map();\n    const userUnsolvedProblem = new Map();\n\n    data.data.result.map((key) => {\n      fillInMap(userVerdict, key.verdict);\n      fillInMap(userAttemptedProblem, key.problem.name);\n      if (key.verdict == \"OK\") {\n        fillInMap(userSolvedProblem, key.problem.name);\n        fillInMap(userLanguage, key.programmingLanguage);\n        fillInMap(userProblemRating, key.problem.rating);\n        fillInMap(userProblemLevel, key.problem.index);\n        for (let tag of key.problem.tags) {\n          fillInMap(userTags, tag);\n        }\n        if (userUnsolvedProblem[key.problem.name])\n          userUnsolvedProblem[key.problem.name] = 0;\n      } else {\n        if (!userSolvedProblem[key.problem.name])\n          userUnsolvedProblem[key.problem.name] = key.problem.rating;\n        else if (userSolvedProblem[key.problem.name] != 0)\n          userUnsolvedProblem[key.problem.name] = key.problem.rating;\n      }\n    });\n\n    const langName = [],\n      langFreq = [],\n      verdName = [],\n      verdFreq = [],\n      tags = [],\n      tagsFreq = [],\n      problemRating = [],\n      problemRatingFreq = [],\n      problemLevel = [],\n      problemLevelFreq = [],\n      tried = [],\n      triedFreq = [],\n      solved = [],\n      solvedFreq = [],\n      unsolved = [],\n      unsolvedFreq = [];\n\n    mapToArray(userVerdict, verdName, verdFreq);\n    mapToArray(userLanguage, langName, langFreq);\n    mapToArray(userTags, tags, tagsFreq);\n    mapToArray(userProblemRating, problemRating, problemRatingFreq);\n    mapToArray(userProblemLevel, problemLevel, problemLevelFreq);\n    mapToArray(userAttemptedProblem, tried, triedFreq);\n    mapToArray(userSolvedProblem, solved, solvedFreq);\n\n    return [\n      langName,\n      langFreq,\n      verdName,\n      verdFreq,\n      tags,\n      tagsFreq,\n      problemRating,\n      problemRatingFreq,\n      problemLevel,\n      problemLevelFreq,\n      tried,\n      triedFreq,\n      solved,\n      solvedFreq,\n    ];\n  };\n\n  const analyzeUserRating = (data) => {\n    let arrRank = [],\n      arrContestName = [],\n      arrNewRating = [],\n      arrOldRating = [];\n\n    data.data.result.map((key) => {\n      for (let val in key) {\n        if (val === \"rank\") arrRank.push(key[val]);\n        else if (val === \"contestName\") arrContestName.push(key[val]);\n        else if (val === \"newRating\") arrNewRating.push(key[val]);\n        else if (val === \"oldRating\") arrOldRating.push(key[val]);\n      }\n    });\n    let mx = 0;\n    let mn = 1000000000;\n    for (let i = 1; i < arrNewRating.length; i++) {\n      console.log(arrNewRating[i] - arrOldRating[i]);\n      mx = Math.max(arrNewRating[i] - arrOldRating[i], mx);\n      mn = Math.min(arrNewRating[i] - arrOldRating[i], mn);\n    }\n    return [arrRank, arrContestName, arrNewRating, arrOldRating, mx, mn];\n  };\n\n  useEffect(() => {\n    fetchUserRating()\n      .then((data) => {\n        return analyzeUserRating(data);\n      })\n      .then(([arrRank, arrContestName, arrNewRating, arrOldRating, mx, mn]) => {\n        setMaxRating(\n          arrNewRating.reduce((a, b) => {\n            return Math.max(a, b);\n          })\n        );\n\n        setMinRating(\n          arrNewRating.reduce((a, b) => {\n            return Math.min(a, b);\n          })\n        );\n\n        setRank(arrRank);\n        setContestName(arrContestName);\n        setNewRating(arrNewRating);\n        setOldRating(arrOldRating);\n        setMaxDown(mn);\n        setMaxUp(mx);\n      });\n\n    fetchUserStatus()\n      .then((data) => {\n        return analyzeUserStatus(data);\n      })\n      .then(\n        ([\n          langName,\n          langFreq,\n          verdName,\n          verdFreq,\n          tags,\n          tagsFreq,\n          problemRating,\n          problemRatingFreq,\n          problemLevel,\n          problemLevelFreq,\n          tried,\n          triedFreq,\n          solved,\n          solvedFreq,\n        ]) => {\n          setLanguage(langName);\n          setVerdict(verdName);\n          setTags(tags);\n          setProblemRating(problemRating);\n          setProblemLevel(problemLevel);\n          setAttempt(tried);\n          setSolve(solved);\n\n          setFreqLanguage(langFreq);\n          setFreqVerdict(verdFreq);\n          setFreqTags(tagsFreq);\n          setFreqProblemRating(problemRatingFreq);\n          setFreqProblemLevel(problemLevelFreq);\n          setFreqAttempt(triedFreq);\n          setFreqsolve(solvedFreq);\n        }\n      )\n      .then(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <UserData>\n          <h1> Ruko BHAISAAB </h1>\n          <img src={WaitGIF} />\n        </UserData>\n      ) : (\n        <>\n          <UserData>\n            <div className=\"flex space-x-4\">\n              <Table>\n                <UserTable\n                  name={props.userName}\n                  totalContest={contestName.length}\n                  maxRating={maxRating}\n                  minRating={minRating}\n                  maxUp={maxUp}\n                  maxDown={maxDown}\n                />\n              </Table>\n              <Table>\n                <UserStatusTable\n                  name={props.userName}\n                  tried={attempt.length}\n                  solved={solve.length}\n                  maxRating={maxRating}\n                  minRating={minRating}\n                  maxUp={maxUp}\n                />\n              </Table>\n            </div>\n            <Pi>\n              <PiChart xAxis={language} yAxis={freqLanguage} />\n            </Pi>\n            <Pi>\n              <PiChart xAxis={verdict} yAxis={freqVerdict} />\n            </Pi>\n            <Graph>\n              <Chart xAxis={tags} yAxis={freqTags} />\n            </Graph>\n            <Graph>\n              <Chart xAxis={problemRating} yAxis={freqProblemRating} />\n            </Graph>\n            <Graph>\n              <Chart xAxis={problemLevel} yAxis={freqProblemLevel} />\n            </Graph>\n            // TODO make this into table\n            <Graph>\n              <LineChart xAxis={contestName} yAxis={newRating} />\n            </Graph>\n          </UserData>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/Untitled.0fd091a7.gif\";","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Colors from \"../../colorScheme/index.jsx\";\n\nconst Data = (props) => {\n  return (\n    <>\n      <Bar\n        data={{\n          // labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n          labels: props.xAxis,\n          datasets: [\n            {\n              label: \"curse\",\n              // data: [100, 200, 300, 400, 500, 600],\n              data: props.yAxis1,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              // barThickness: 40,\n              // borderWidth: 6,\n              borderColor: \"black\",\n            },\n            {\n              label: \"babu\",\n              // data: [100, 200, 300, 400, 500, 600],\n              data: props.yAxis2,\n              backgroundColor: \"rgb(54, 162, 235)\",\n              // barThickness: 40,\n              // borderWidth: 6,\n              borderColor: \"black\",\n            },\n            // {\n            //   label: \"Store 2\",\n            //   data: [321, 212, 344, 332, 223, 566],\n            //   backgroundColor: \"green\",\n            //   barThickness: 12,\n            // },\n            // {\n            //   label: \"Store 3\",\n            //   data: [123, 200, 232, 400, 232, 23],\n            //   backgroundColor: \"orange\",\n            //   barThickness: 12,\n            // },\n            // {\n            //   label: \"Store 4\",\n            //   data: [100, 500, 300, 343, 43, 343],\n            //   backgroundColor: \"purple\",\n            //   barThickness: 12,\n            // },\n          ],\n        }}\n        options={{\n          layout: {\n            padding: {\n              left: 0,\n              right: 0,\n              bottom: 40,\n              top: 40,\n            },\n          },\n          tooltips: {\n            callbacks: {\n              label: function (toolTipItem) {\n                return \"$\" + toolTipItem.value;\n              },\n            },\n          },\n          scales: {\n            xAxes: [\n              {\n                stacked: true,\n                gridLines: {\n                  color: \"cyan\",\n                },\n                scaleLabel: {\n                  labelString: \"x-axis\",\n                  display: true,\n                  fontColor: \"blue\",\n                  fontSize: \"8rem\",\n                },\n              },\n            ],\n            yAxes: [\n              {\n                stacked: true,\n                gridLines: {\n                  color: \"cyan\",\n                },\n\n                scaleLabel: {\n                  labelString: \"y-axis\",\n                  display: true,\n                  fontColor: \"blue\",\n                  fontSize: \"8rem\",\n                },\n                ticks: {\n                  beginAtZero: true,\n                  fontColor: \"red\",\n                  fontSize: \"6rem\",\n                },\n              },\n            ],\n          },\n        }}\n      ></Bar>\n    </>\n  );\n};\n\nexport default Data;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport tw from \"twin.macro\";\nimport Colors from \"../../colorScheme/index.jsx\";\nimport UnderConstructionGIF from \"../../gif/Untitled.gif\";\nimport Graph from \"../../components/comparitorData/barGraph.jsx\";\n\nconst MainPage = styled.div`\n  ${tw`\n    flex\n    my-4\n    py-4\n    space-x-4\n    flex-nowrap\n    flex-col\n    justify-center\n    items-center\n    bg-gray-400\n    container\n    mx-auto\n    rounded-3xl\n  `};\n  background-color: ${Colors.body};\n`;\n\nconst Comparitor = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [user1, setUser1] = useState({\n    rank: [],\n    oldRating: [],\n    newRating: [],\n    contestName: [],\n    maxRating: [],\n    minRating: [],\n    maxUp: 0,\n    maxDown: 0,\n\n    language: [],\n    verdict: [],\n    tags: [],\n    problemRating: [],\n    problemLevel: [],\n    attempt: [],\n    solve: [],\n\n    freqLanguage: [],\n    freqVerdict: [],\n    freqTags: [],\n    freqProblemRating: [],\n    freqProblemLevel: [],\n    freqAttempt: [],\n    freqSolve: [],\n  });\n  const [user2, setUser2] = useState({\n    rank: [],\n    oldRating: [],\n    newRating: [],\n    contestName: [],\n    maxRating: [],\n    minRating: [],\n    maxUp: 0,\n    maxDown: 0,\n\n    language: [],\n    verdict: [],\n    tags: [],\n    problemRating: [],\n    problemLevel: [],\n    attempt: [],\n    solve: [],\n\n    freqLanguage: [],\n    freqVerdict: [],\n    freqTags: [],\n    freqProblemRating: [],\n    freqProblemLevel: [],\n    freqAttempt: [],\n    freqSolve: [],\n  });\n\n  const fetchUserStatusOne = () => {\n    const data = axios(\n      `https://codeforces.com/api/user.status?handle=${props.handle1}`\n    );\n    return data;\n  };\n  const fetchUserStatusTwo = () => {\n    const data = axios(\n      `https://codeforces.com/api/user.status?handle=${props.handle2}`\n    );\n    return data;\n  };\n\n  const fillInMap = (userMap, value) => {\n    userMap[value] ? (userMap[value] += 1) : (userMap[value] = 1);\n  };\n\n  const mapToArray = (userMap, userArr, userArrFreq) => {\n    for (let val in userMap) {\n      userArr.push(val);\n      userArrFreq.push(userMap[val]);\n    }\n  };\n\n  const analyzeUserStatus = (data) => {\n    const userLanguage = new Map();\n    const userVerdict = new Map();\n    const userTags = new Map();\n    const userProblemRating = new Map();\n    const userProblemLevel = new Map();\n    const userAttemptedProblem = new Map();\n    const userSolvedProblem = new Map();\n\n    data.data.result.map((key) => {\n      fillInMap(userVerdict, key.verdict);\n      fillInMap(userAttemptedProblem, key.problem.name);\n      if (key.verdict == \"OK\") {\n        fillInMap(userSolvedProblem, key.problem.name);\n        fillInMap(userLanguage, key.programmingLanguage);\n        fillInMap(userProblemRating, key.problem.rating);\n        fillInMap(userProblemLevel, key.problem.index);\n        for (let tag of key.problem.tags) {\n          fillInMap(userTags, tag);\n        }\n      }\n    });\n\n    const langName = [],\n      langFreq = [],\n      verdName = [],\n      verdFreq = [],\n      tags = [],\n      tagsFreq = [],\n      problemRating = [],\n      problemRatingFreq = [],\n      problemLevel = [],\n      problemLevelFreq = [],\n      tried = [],\n      triedFreq = [],\n      solved = [],\n      solvedFreq = [];\n\n    mapToArray(userVerdict, verdName, verdFreq);\n    mapToArray(userLanguage, langName, langFreq);\n    mapToArray(userTags, tags, tagsFreq);\n    mapToArray(userProblemRating, problemRating, problemRatingFreq);\n    mapToArray(userProblemLevel, problemLevel, problemLevelFreq);\n    mapToArray(userAttemptedProblem, tried, triedFreq);\n    mapToArray(userSolvedProblem, solved, solvedFreq);\n\n    return {\n      rank: [],\n      oldRating: [],\n      newRating: [],\n      contestName: [],\n      maxRating: [],\n      minRating: [],\n      maxUp: 0,\n      maxDown: 0,\n\n      language: langName,\n      verdict: verdName,\n      tags: tags,\n      problemRating: problemRating,\n      problemLevel: problemLevel,\n      attempt: tried,\n      solve: solved,\n\n      freqLanguage: langFreq,\n      freqVerdict: verdFreq,\n      freqTags: tagsFreq,\n      freqProblemRating: problemRatingFreq,\n      freqProblemLevel: problemLevelFreq,\n      freqAttempt: triedFreq,\n      freqSolve: solvedFreq,\n    };\n  };\n\n  useEffect(() => {\n    fetchUserStatusOne()\n      .then((data) => {\n        return analyzeUserStatus(data);\n      })\n      .then((obj) => {\n        setUser1(obj);\n      });\n\n    fetchUserStatusTwo()\n      .then((data) => {\n        return analyzeUserStatus(data);\n      })\n      .then((obj) => {\n        setUser2(obj);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <MainPage>\n      {loading ? (\n        <img src={UnderConstructionGIF} className=\"rounded-3xl\" />\n      ) : (\n        <>\n          <Graph\n            xAxis={user1.problemRating}\n            yAxis1={user1.freqProblemRating}\n            yAxis2={user2.freqProblemRating}\n          />\n          <Graph\n            xAxis={user1.problemLevel}\n            yAxis1={user1.freqProblemLevel}\n            yAxis2={user2.freqProblemLevel}\n          />\n          <Graph\n            xAxis={user1.tags}\n            yAxis1={user1.freqTags}\n            yAxis2={user2.freqTags}\n          />\n        </>\n      )}\n    </MainPage>\n  );\n};\n\nexport default Comparitor;\n","export default __webpack_public_path__ + \"static/media/LD1.c22daf7e.gif\";","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport tw from \"twin.macro\";\nimport UserPage from \"../UserPage/index.jsx\";\nimport Colors from \"../../colorScheme/index.jsx\";\nimport Comparitor from \"../ComparitorPage/index.jsx\";\nimport GIF from \"../../gif/LD1.gif\";\n\nconst Content = styled.div`\n  ${tw`\n    w-screen\n    h-auto\n    py-2\n    my-8\n    flex\n    justify-center\n    items-center\n    container\n    mx-auto\n    rounded-3xl\n\n\n    `};\n  background-color: ${Colors.body};\n`;\n\nconst HomePage = () => {\n  const [userName, setUserName] = useState(\"sharma_utkarsh\");\n  const [platformName, setPlatformName] = useState(\"codeforces\");\n  const [url, setUrl] = useState(\"\");\n\n  const [handle1, setHandle1] = useState(\"sharma_utkarsh\");\n  const [handle2, setHandle2] = useState(\"ksridharan829\");\n\n  const [renderUserPage, setRenderUserPage] = useState(false);\n  const [renderComparingPage, setRenderComparingPage] = useState(false);\n\n  const captureUserName = (event) => {\n    setUserName(event.target.value);\n  };\n\n  const capturePlatform = (event) => {\n    setPlatformName(event.target.value);\n  };\n\n  const captureHandle1 = (event) => {\n    setHandle1(event.target.value);\n  };\n\n  const captureHandle2 = (event) => {\n    setHandle2(event.target.value);\n  };\n\n  const captureData = () => {\n    setUrl(\"https://codeforces.com/api/user.rating?handle=\" + userName);\n    setRenderUserPage(true);\n  };\n\n  const beginComparing = () => {\n    setRenderComparingPage(!renderComparingPage);\n  };\n\n  const changeVisiblityFromUserPage = () => {\n    setRenderUserPage(!renderUserPage);\n  };\n\n  const changeVisiblityFromComparingPage = () => {\n    setRenderComparingPage(!renderComparingPage);\n  };\n\n  return (\n    <>\n      {!renderUserPage && !renderComparingPage ? (\n        <>\n          <Content>\n            <div className=\"flex flex-nowrap flex-col space-y-4 w-screen items-center\">\n              <img src={GIF} className=\"rounded-full relative\" />\n              <input\n                type=\"text\"\n                placeholder=\"platform name\"\n                value={platformName}\n                className=\"border-4 border-transparent w-2/6 focus:outline-none  focus:border-gray-700 rounded-2xl p-1 border-gray-200\"\n                onChange={capturePlatform}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"handle Name\"\n                value={userName}\n                className=\"border-4 border-transparent w-2/6 focus:outline-none  focus:border-gray-700 rounded-2xl p-1 border-gray-200\"\n                onChange={captureUserName}\n              />\n              <button\n                onClick={captureData}\n                className=\"rounded-2xl shadow-2xl p-2 bg-gray-500 hover:bg-gray-700 text-white\"\n              >\n                Submit\n              </button>\n            </div>\n          </Content>\n          <Content>\n            <div className=\"flex flex-nowrap flex-col space-y-4 w-screen items-center\">\n              <h1> Compare handles </h1>\n              <input\n                type=\"text\"\n                placeholder=\"handle 1\"\n                value={handle1}\n                className=\"border-4 border-transparent w-2/6 focus:outline-none  focus:border-gray-700 rounded-2xl p-1 border-gray-200\"\n                onChange={captureHandle1}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"handle 2\"\n                value={handle2}\n                className=\"border-4 border-transparent w-2/6 focus:outline-none  focus:border-gray-700 rounded-2xl p-1 border-gray-200\"\n                onChange={captureHandle2}\n              />\n              <button\n                onClick={beginComparing}\n                className=\"rounded-2xl shadow-2xl p-2 bg-gray-500 hover:bg-gray-700 text-white\"\n              >\n                Compare\n              </button>\n            </div>\n          </Content>\n        </>\n      ) : renderUserPage ? (\n        <>\n          <Content>\n            <div className=\"flex flex-nowrap flex-col space-y-4 w-screen items-center\">\n              <button className=\"border-4 border-transparent w-2/6 focus:outline-none  focus:border-gray-700 rounded-2xl p-1 border-gray-200\">\n                {userName}\n              </button>\n              <button\n                onClick={changeVisiblityFromUserPage}\n                className=\"rounded-full px-6 py-3 shadow-2xl p-2 bg-gray-500 hover:bg-red-700 text-white\"\n              >\n                X\n              </button>\n            </div>\n          </Content>\n          <UserPage\n            url={url}\n            userName={userName}\n            renderUserPage={renderUserPage}\n          />\n        </>\n      ) : (\n        <>\n          <Content>\n            <div className=\"flex flex-nowrap flex-col space-y-4 w-screen items-center\">\n              <h1> Compare handles </h1>\n              <button className=\"border-4 border-transparent w-2/6 focus:outline-none  focus:border-gray-700 rounded-2xl p-1 border-gray-200\">\n                {handle1}\n              </button>\n              <button className=\"border-4 border-transparent w-2/6 focus:outline-none  focus:border-gray-700 rounded-2xl p-1 border-gray-200\">\n                {handle2}\n              </button>\n              <button\n                onClick={changeVisiblityFromComparingPage}\n                className=\"rounded-full px-6 py-3 shadow-2xl p-2 bg-gray-500 hover:bg-red-700 text-white\"\n              >\n                X\n              </button>\n            </div>\n          </Content>\n          <Comparitor handle1={handle1} handle2={handle2} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/navbar/index.jsx\";\nimport HomePage from \"./containers/HomePage/index.jsx\";\nimport styled from \"styled-components\";\nimport Colors from \"./colorScheme/index.jsx\";\nimport tw from \"twin.macro\";\n\nconst MainContainer = styled.div`\n  background-color: ${Colors.background};\n  ${tw`\n     min-h-screen\n     py-4\n`};\n`;\n\nfunction App() {\n  return (\n    <MainContainer>\n      <NavBar />\n      <HomePage />\n    </MainContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}